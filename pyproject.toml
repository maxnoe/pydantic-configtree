[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "pydantic-settings-ctapipe"
description = "Extensions of pydantic-settings for use as ctapipe configuration system"
readme = "README.md"
license = "BSD-3-Clause"
authors = [
    {name = "Maximilian Linhoff", email = "maximilian.linhoff@cta-observatory.org"},
]

requires-python = ">=3.11"
dependencies = [
    "pydantic-settings",
]

# needed for setuptools_scm, we don"t define a static version
dynamic = ["version"]


[tool.setuptools.packages.find]
where = ["src"]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "packaging",
  "pyyaml",
  "tomlkit",
  "astropy",
]

doc = [
  "sphinx",
  "numpydoc",
  "pydata-sphinx-theme",
  "sphinx-changelog",
]

dev = [
  "setuptools_scm",
  "sphinx-autobuild",
]

# we can use self-references to simplify all, needs to match project.name defined above
all = [
  "pydantic-settings-ctapipe[test,dev,doc]",
]

[tool.setuptools_scm]
write_to = "src/pydantic_settings_ctapipe/_version.py"

[tool.ruff.lint]
extend-select = [
    "I", # isort
    "N", # pep8 naming
    "D", # pydocstyle
    "NPY", # numpy
    "PT", # pytest
    "UP", # pyupgrade
    "COM", # flake8-commas
    "ISC", # implicit string concat rules
    "ICN", # import name conventions
    "G", # logging
]
ignore = [
    "COM812", # incompatible with ruff format
    "ISC001", # incompatible with ruff format
    "N801", # we use __config__ for the config class
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# no documentation linting for test files
"**/tests/**" = ["D"]
"**/tests_*.py" = ["D"]
"examples/*.py" = ["D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.isort]
profile = "black"
line_length = 88

[tool.coverage.run]
relative_files = true
source = ["src"]
omit = [
    "src/pydantic_settings_ctapipe/_version.py",
    "src/pydantic_settings_ctapipe/_dev_version/*"
]

[tool.pytest.ini_options]
minversion = "7"
testpaths = ["src"]
log_cli_level = "INFO"
xfail_strict = true
# print summary of failed tests, force errors if settings are misspelled
addopts = ["-ra", "--strict-config", "--strict-markers"]
filterwarnings = [
    "error",
]


[tool.repo-review]
select = ["PY", "PP", "PC"]
ignore = [
    "PY007", # we do not use tox for now
    "PC140", # mypy is not used
    "PC170", # pygrep is not used
    "PC180", # prettier is not used
    "PC111", # blacken-docs is not used
    "PC901", # no CI setup currently for updating pre-commit hooks
]

# fits files are sometimes mistaken for text files as they start with an ASCII header
# we need to ignore them here
[tool.codespell]
skip = "*.fits,*.fits.fz"

[tool.towncrier]
package = "pydantic_settings_ctapipe"
directory = "docs/changes"
filename = "CHANGES.rst"
template = "docs/changes/template.rst"
underlines = ["-", "~", "^"]
# Let towncrier create proper links to the merged MR.
# By default, towncrier connects everything to issues.
# We rather want to connect it to merge request
issue_format = "`!{issue} <https://github.com/maxnoe/pydantic-settings-ctapipe/pull/{issue}>`__"

[tool.towncrier.fragment.feature]
    name = "New Features"
    showcontent = true

[tool.towncrier.fragment.bugfix]
    name = "Bug Fixes"
    showcontent = true

[tool.towncrier.fragment.api]
    name = "API Changes"
    showcontent = true

[tool.towncrier.fragment.optimization]
    name = "Refactoring and Optimization"
    showcontent = true

[tool.towncrier.fragment.maintenance]
    name = "Maintenance"
    showcontent = true
